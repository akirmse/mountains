#
# Makefile for peak database manipulation programs
#

AR     = lib -nologo
CC     = cl -nologo
MAKE   = nmake -nologo
LINK   = link -nologo

CP = copy
RM = del /q
RMDIR = rmdir
MV = rename
MKDIR = mkdir

SOURCEDIR = .

!ifdef RELEASE
!undef DEBUG
OUTDIR=release
!else
DEBUG = 1
OUTDIR=debug
!endif

LIBS = setargv.obj

# Disable easylogging++ logging to a file by default
CCOMMONFLAGS = -DPLATFORM_WINDOWS -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE \
	-DELPP_NO_DEFAULT_LOG_FILE -DELPP_THREAD_SAFE /D_USE_MATH_DEFINES /EHsc /DPATH_MAX=1025 \
	-MP -Zi -W3 -WX
CNORMALFLAGS = $(CCOMMONFLAGS) /Ox
CDEBUGFLAGS = $(CCOMMONFLAGS)
LINKCOMMONFLAGS =
LINKNORMALFLAGS = $(LINKCOMMONFLAGS) /debug
LINKDEBUGFLAGS = $(LINKCOMMONFLAGS) /debug

!ifdef DEBUG

CFLAGS = $(CDEBUGFLAGS)
LINKFLAGS = $(LINKDEBUGFLAGS)

!else
CFLAGS = $(CNORMALFLAGS)
LINKFLAGS = $(LINKNORMALFLAGS)
!endif

POINTLIB = $(OUTDIR)/pointlib.a
LOADERLIB = $(OUTDIR)/loaderlib.a

POINTLIB_OBJS = \
	$(OUTDIR)/point.obj \
	$(OUTDIR)/quadtree.obj \
	$(OUTDIR)/util.obj \

LOADERLIB_OBJS = \
	$(OUTDIR)/flt_loader.obj \
	$(OUTDIR)/glo_loader.obj \
	$(OUTDIR)/hgt_loader.obj \

ISOLATION_OBJS = \
	$(OUTDIR)/easylogging++.obj \
	$(OUTDIR)/file_format.obj \
	$(OUTDIR)/isolation.obj \
	$(OUTDIR)/isolation_finder.obj \
	$(OUTDIR)/isolation_results.obj \
	$(OUTDIR)/isolation_task.obj \
	$(OUTDIR)/latlng.obj \
	$(OUTDIR)/peak_finder.obj \
	$(OUTDIR)/peakbagger_collection.obj \
	$(OUTDIR)/peakbagger_point.obj \
	$(OUTDIR)/point_map.obj \
	$(OUTDIR)/tile.obj \
	$(OUTDIR)/tile_cache.obj \
	$(OUTDIR)/tile_loading_policy.obj \
	$(POINTLIB) \
	$(LOADERLIB) \

PEAKBAGGER_ISOLATION_MAPPER_OBJS = \
	$(OUTDIR)/isolation_collection.obj \
	$(OUTDIR)/isolation_point.obj \
	$(OUTDIR)/latlng.obj \
	$(OUTDIR)/peakbagger_collection.obj \
	$(OUTDIR)/peakbagger_isolation_mapper.obj \
	$(OUTDIR)/peakbagger_point.obj \
	$(POINTLIB) \

PROMINENCE_OBJS = \
	$(OUTDIR)/coordinate_system.obj \
	$(OUTDIR)/divide_tree.obj \
	$(OUTDIR)/domain_map.obj \
	$(OUTDIR)/easylogging++.obj \
	$(OUTDIR)/file_format.obj \
	$(OUTDIR)/filter.obj \
	$(OUTDIR)/island_tree.obj \
	$(OUTDIR)/kml_writer.obj \
	$(OUTDIR)/latlng.obj \
	$(OUTDIR)/line_tree.obj \
	$(OUTDIR)/peakbagger_collection.obj \
	$(OUTDIR)/peakbagger_point.obj \
	$(OUTDIR)/point_map.obj \
	$(OUTDIR)/prominence.obj \
	$(OUTDIR)/prominence_task.obj \
	$(OUTDIR)/tile.obj \
	$(OUTDIR)/tile_cache.obj \
	$(OUTDIR)/tile_loading_policy.obj \
	$(OUTDIR)/tree_builder.obj \
	$(POINTLIB) \
	$(LOADERLIB) \

MERGE_DIVIDE_TREES_OBJS = \
	$(OUTDIR)/coordinate_system.obj \
	$(OUTDIR)/divide_tree.obj \
	$(OUTDIR)/easylogging++.obj \
	$(OUTDIR)/island_tree.obj \
	$(OUTDIR)/kml_writer.obj \
	$(OUTDIR)/latlng.obj \
	$(OUTDIR)/line_tree.obj \
	$(OUTDIR)/merge_divide_trees.obj \
	$(OUTDIR)/tile.obj \
	$(POINTLIB) \

FILTER_POINTS_OBJS = \
	$(OUTDIR)/easylogging++.obj \
	$(OUTDIR)/filter.obj \
	$(OUTDIR)/filter_points.obj \
	$(POINTLIB) \

COMPUTE_PARENTS_OBJS = \
	$(OUTDIR)/coordinate_system.obj \
	$(OUTDIR)/divide_tree.obj \
	$(OUTDIR)/easylogging++.obj \
	$(OUTDIR)/island_tree.obj \
	$(OUTDIR)/kml_writer.obj \
	$(OUTDIR)/line_tree.obj \
	$(OUTDIR)/compute_parents.obj \
	$(POINTLIB) \

all : makedirs \
	$(OUTDIR)/isolation.exe \
	$(OUTDIR)/prominence.exe $(OUTDIR)/merge_divide_trees.exe \
	$(OUTDIR)/filter_points.exe \
	$(OUTDIR)/compute_parents.exe \

$(POINTLIB): $(POINTLIB_OBJS)
	$(AR) /OUT:$@ $**

$(LOADERLIB): $(LOADERLIB_OBJS)
	$(AR) /OUT:$@ $**

$(OUTDIR)/isolation.exe: $(ISOLATION_OBJS)
	$(LINK) $** $(LIBS) -OUT:$@ $(LINKFLAGS)

$(OUTDIR)/prominence.exe: $(PROMINENCE_OBJS)
	$(LINK) $** -OUT:$@ $(LIBS) $(LINKFLAGS)

$(OUTDIR)/merge_divide_trees.exe: $(MERGE_DIVIDE_TREES_OBJS)
	$(LINK) $** -OUT:$@ $(LIBS) $(LINKFLAGS)

$(OUTDIR)/filter_points.exe: $(FILTER_POINTS_OBJS)
	$(LINK) $** -OUT:$@ $(LIBS) $(LINKFLAGS)

$(OUTDIR)/compute_parents.exe: $(COMPUTE_PARENTS_OBJS)
	$(LINK) $** -OUT:$@ $(LIBS) $(LINKFLAGS)

{$(SOURCEDIR)}.cpp{$(OUTDIR)}.obj::
	$(CC) $(CFLAGS) /FpCpch /Fd$(OUTDIR)\vc90.pdb /Fo$(OUTDIR)/ -c $< 

{$(SOURCEDIR)}.cc{$(OUTDIR)}.obj::
	$(CC) $(CFLAGS) /FpCpch /Fd$(OUTDIR)\vc90.pdb /Fo$(OUTDIR)/ -c $< 

makedirs:
	-@$(MKDIR) $(OUTDIR)

clean:
	@$(RM) $(OUTDIR)\*
	@$(RMDIR) $(OUTDIR)

depend:
	makedepend -Y -p'$(OUTDIR)/' *.cpp
	@$(RM) Makefile.bak

# DO NOT DELETE

release/coordinate_system.o: coordinate_system.h primitives.h latlng.h
release/divide_tree.o: divide_tree.h coordinate_system.h primitives.h
release/divide_tree.o: latlng.h easylogging++.h island_tree.h util.h
release/domain_map.o: domain_map.h tile.h primitives.h latlng.h pixel_array.h
release/domain_map.o: easylogging++.h
release/find_missing_peaks.o: loj_collection.h loj_point.h point.h quadtree.h
release/find_missing_peaks.o: peakbagger_collection.h peakbagger_point.h
release/find_peakbagger_duplicates.o: loj_collection.h loj_point.h point.h
release/find_peakbagger_duplicates.o: quadtree.h peakbagger_collection.h
release/find_peakbagger_duplicates.o: peakbagger_point.h
release/forced_matches.o: forced_matches.h util.h
release/island_tree.o: island_tree.h primitives.h divide_tree.h
release/island_tree.o: coordinate_system.h latlng.h easylogging++.h
release/isolation.o: isolation_task.h tile_cache.h lock.h lrucache.h
release/isolation.o: point_map.h point.h tile.h primitives.h latlng.h
release/isolation.o: peakbagger_collection.h peakbagger_point.h quadtree.h
release/isolation.o: ThreadPool.h easylogging++.h
release/isolation_collection.o: isolation_collection.h isolation_point.h
release/isolation_collection.o: point.h latlng.h quadtree.h
release/isolation_finder.o: isolation_finder.h tile_cache.h lock.h lrucache.h
release/isolation_finder.o: point_map.h point.h tile.h primitives.h latlng.h
release/isolation_finder.o: easylogging++.h math_util.h
release/isolation_point.o: isolation_point.h point.h latlng.h
release/isolation_results.o: isolation_results.h latlng.h
release/isolation_task.o: isolation_finder.h tile_cache.h lock.h lrucache.h
release/isolation_task.o: point_map.h point.h tile.h primitives.h latlng.h
release/isolation_task.o: isolation_task.h isolation_results.h peak_finder.h
release/isolation_task.o: easylogging++.h
release/latlng.o: latlng.h math_util.h
release/loj_collection.o: loj_collection.h loj_point.h point.h quadtree.h
release/loj_collection.o: util.h
release/loj_mapper_main.o: forced_matches.h loj_collection.h loj_point.h
release/loj_mapper_main.o: point.h quadtree.h peakbagger_collection.h
release/loj_mapper_main.o: peakbagger_point.h peak_matcher.h
release/loj_point.o: loj_point.h point.h
release/merge_divide_trees.o: divide_tree.h coordinate_system.h primitives.h
release/merge_divide_trees.o: latlng.h island_tree.h easylogging++.h
release/peak_finder.o: peak_finder.h tile.h primitives.h latlng.h
release/peak_matcher.o: peak_matcher.h peakbagger_point.h point.h loj_point.h
release/peakbagger_collection.o: peakbagger_collection.h peakbagger_point.h
release/peakbagger_collection.o: point.h quadtree.h
release/peakbagger_isolation_mapper.o: isolation_collection.h
release/peakbagger_isolation_mapper.o: isolation_point.h point.h latlng.h
release/peakbagger_isolation_mapper.o: quadtree.h peakbagger_collection.h
release/peakbagger_isolation_mapper.o: peakbagger_point.h
release/peakbagger_point.o: peakbagger_point.h point.h
release/point.o: point.h
release/point_map.o: point_map.h point.h
release/prominence.o: peakbagger_collection.h peakbagger_point.h point.h
release/prominence.o: quadtree.h point_map.h prominence_task.h tile_cache.h
release/prominence.o: lock.h lrucache.h tile.h primitives.h latlng.h
release/prominence.o: ThreadPool.h easylogging++.h
release/prominence_task.o: prominence_task.h tile_cache.h lock.h lrucache.h
release/prominence_task.o: point_map.h point.h tile.h primitives.h latlng.h
release/prominence_task.o: divide_tree.h coordinate_system.h tree_builder.h
release/prominence_task.o: domain_map.h pixel_array.h easylogging++.h
release/quadtree.o: quadtree.h point.h
release/tile.o: tile.h primitives.h latlng.h math_util.h util.h
release/tile.o: easylogging++.h
release/tile_cache.o: tile_cache.h lock.h lrucache.h point_map.h point.h
release/tile_cache.o: tile.h primitives.h latlng.h peakbagger_point.h
release/tile_cache.o: easylogging++.h
release/tree_builder.o: tree_builder.h primitives.h domain_map.h tile.h
release/tree_builder.o: latlng.h pixel_array.h divide_tree.h
release/tree_builder.o: coordinate_system.h easylogging++.h
release/util.o: util.h
